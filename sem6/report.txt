Отчет по домашнему заданию к семинару 6.
Владимиров Дмитрий Андреевич, БПИ218

Разработаны программы server.c и client.c, взаимодействующие через разделяемую память.
Клиент генерирует случайные числа в диапазоне 1-10 и записывает их в разделяемую память,  в то время как сервер считывает их оттуда и выводит на консоль (перед этим он проверяет, не равно ли это число нулю, и если это ноль, то есть клиент еще не сгенерировал ничего, то в консоль ничего не выводится).
Пример работы с данными программами:
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ gcc server.c -o server
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ gcc client.c -o client
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./client 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
3
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./client 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./client 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
2
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./client 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
10

------------------------------------------------------------------------------------------------------------------------

По окончании работы этих программ разделяемая память лишь отвязывается от самих программ, но продолжает существовать в адресном пространстве ядра, поэтому ее нужно удалить оттуда. Удалять я буду следующим образом: сначала при помощи команды ipcs определю идентификатор программы, которую следует удалять (сделать это будет несложно, потому что нет других программ, требующих только 4 байта памяти с кодификатором 0), затем при помощи команды ipcrm удалю эту разделяемую память.
Пример работы:
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ipcs

------ Message Queues --------
key        msqid      owner      perms      used-bytes   messages    

------ Shared Memory Segments --------
key        shmid      owner      perms      bytes      nattch     status      
0x00000000 32798      avo        600        524288     2          dest         
0x00000000 98337      avo        600        16777216   2          dest         

------ Semaphore Arrays --------
key        semid      owner      perms      nsems     

avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./client 
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ./server 
9
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ipcs

------ Message Queues --------
key        msqid      owner      perms      used-bytes   messages    

------ Shared Memory Segments --------
key        shmid      owner      perms      bytes      nattch     status      
0x00043296 163841     avo        666        4          0                       
0x00000000 32798      avo        600        524288     2          dest         
0x00000000 98337      avo        600        16777216   2          dest         

------ Semaphore Arrays --------
key        semid      owner      perms      nsems     

avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ipcrm shm 163841
resource(s) deleted
avo@avo-Yoga-Slim-7-14IIL05:~/OS/sem6/OS/sem6$ ipcs

------ Message Queues --------
key        msqid      owner      perms      used-bytes   messages    

------ Shared Memory Segments --------
key        shmid      owner      perms      bytes      nattch     status      
0x00000000 32798      avo        600        524288     2          dest         
0x00000000 98337      avo        600        16777216   2          dest         

------ Semaphore Arrays --------
key        semid      owner      perms      nsems    


Как видно, после запусков программ у нас появляется новый участок разделяемой памяти, который мы удаляем после работы с программами.
